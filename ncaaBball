import random

test_tally = {}

def test():
    ppg_by_ranking = {1: [91, 74],
    2: [90.8,	73.8],
    3:	[90.6,	73.6],
    4:	[90.4,	73.4],
    5:	[90.2,	73.2],
    6:	[90,	73],
    7:	[89.8,	72.8],
    8:  [89.6,	72.6],
    9:	[89.4,	72.4],
    10:	[89.2,	72.2],
    11:	[89,	72,],
    12:	[88.8,	71.8],
    13:	[88.6,	71.6],
    14:	[88.4,	71.4],
    15:	[88.2,	71.2],
    16:	[88,71,],
    17:	[87.8,  70.8],
    18:	[87.6,	70.6],
    19:	[87.4,	70.4],
    20:	[87.2,	70.2],
    21:	[87,	70],
    22:	[86.8,	69.8],
    23:	[86.6,	69.6],
    24:	[86.4,	69.4],
    25:	[86.2,	69.2],
    26:	[86,	69],
    27:	[85.8,	68.8],
    28:	[85.6,	68.6],
    29:	[85.4,	68.4],
    30:	[85.2,	68.2],
    31:	[85,	68],
    32:	[84.8,	67.8],
    33:	[84.6,	67.6],
    34:	[84.4,	67.4],
    35:	[84.2,	67.2],
    36:	[84,	67],
    37:	[83.8,	66.8],
    38:	[83.6,	66.6],
    39:	[83.4,	66.4],
    40:	[83.2,	66.2],
    41:	[83,	66],
    42:	[82.8,	65.8],
    43:	[82.6,	65.6],
    44:	[82.4,	65.4],
    45:	[82.2,	65.2],
    46:	[82,	65],
    47:	[81.8,	64.8],
    48:	[81.6,	64.6],
    49:	[81.4,	64.4],
    50:	[81.2,	64.2],
    51:	[81,	64],
    52:	[80.8,	63.8],
    53:	[80.6,	63.6],
    54:	[80.4,	63.4],
    55:	[80.2,	63.2],
    56:	[80,	63],
    57:	[79.8,	62.8],
    58:	[79.6,	62.6],
    59:	[79.4,	62.4],
    60:	[79.2,	62.2],
    61:	[79,	62],
    62:	[78.8,	61.8],
    63:	[78.6,	61.6],
    64:	[78.4,	61.4],
    65:	[78.2,	61.2],
    66:	[78,	61,],
    67:	[77.8,	60.8],
    68:	[77.7,	60.7],
    69:	[77.6,	60.6],
    70:	[77.5,	60.5],
    71:	[77.4,	60.4],
    72:	[77.3,	60.3],
    73:	[77.2,	60.2],
    74:	[77.1,	60.1],
    75:	[77,	60],
    76:	[76.9,	59.9],
    77:	[76.8,	59.8],
    78:	[76.7,	59.7],
    79:	[76.6,	59.6],
    80:	[76.5,	59.5],
    81:	[76.4,	59.4],
    82:	[76.3,	59.3],
    83:	[76.2,	59.2],
    84:	[76.1,	59.1],
    85:	[76,	59],
    86:	[75.9,	58.9],
    87:	[75.8,	58.8],
    88:	[75.7,	58.7],
    89:	[75.6,	58.6],
    90:	[75.5,	58.5],
    91:	[75.4,	58.4],
    92:	[75.3,	58.3],
    93:	[75.2,	58.2],
    94:	[75.1,	58.1],
    95:	[75,	58],
    96:	[74.9,	57.9],
    97:	[74.8,	57.8],
    98:	[74.7,	57.7],
    99:	[74.6,	57.6],
    100:	[74.5,	57.5],
    101:[74.4,	57.4],
    102:	[74.3,	57.3],
    103:	[74.2,	57.2],
    104:	[74.1,	57.1],
    105:	[74,	57],
    106:	[73.9,	56.9],
    107:	[73.8,	56.8],
    108:	[73.7,	56.7],
    109:	[73.6,	56.6],
    110:	[73.5,	56.5],
    111:	[73.4,	56.4],
    112:	[73.3,	56.3],
    113:	[73.2,	56.2],
    114:	[73.1,	56.1],
    115:	[73,	56],
    116:	[72.9,	55.9],
    117:	[72.8,	55.8],
    118:	[72.7,	55.7],
    119:	[72.6,	55.6],
    120:	[72.5,	55.5],
    121:	[72.4,	55.4],
    122:	[72.3,	55.3],
    123:	[72.2,	55.2],
    124:	[72.1,	55.1],
    125:	[72,	55],
    126:	[71.9,	54.9],
    127:	[71.8,	54.8],
    128:	[71.7,	54.7],
    129:	[71.6,	54.6],
    130:	[71.5,	54.5],
    131:	[71.4,	54.4],
    132:	[71.3,	54.3],
    133:	[71.2,	54.2],
    134:	[71.1,	54.1],
    135:	[71,	54],
    136:	[70.9,	53.9],
    137:	[70.8,	53.8],
    138:	[70.7,	53.7],
    139:	[70.6,	53.6],
    140:	[70.5,	53.5],
    141:	[70.4,	53.4],
    142:	[70.3,	53.3],
    143:	[70.2,	53.2],
    144:	[70.1,	53.1],
    145:	[70, 53],
    146:	[69.9,	52.9],
    147:	[69.8,	52.8],
    148:	[69.7,	52.7],
    149:	[69.6,	52.6],
    150:	[69.5,	52.5],
    151:	[69.4,	52.4],
    152:	[69.3,	52.3],
    153:	[69.2,	52.2],
    154:    [69.1,	52.1],
    155:	[69,	52],
    156:	[68.9,	51.9],
    157:	[68.8,	51.8],
    158:	[68.7,	51.7],
    159:	[68.6,	51.6],
    160:	[68.5,	51.5],
    161:	[68.4,	51.4],
    162:	[68.3,	51.3],
    163:	[68.2,	51.2],
    164:	[68.1,	51.1],
    165:	[68,	51],
    166:	[67.9,	50.9],
    167:	[67.8,	50.8],
    168:	[67.75,	50.75],
    169:	[67.7, 50.7],
    170:	[67.65,	50.65],
    171:	[67.6, 50.6],
    172:	[67.55,	50.55],
    173:	[67.5, 50.5],
    174:	[67.45,	50.45],
    175:	[67.4,	50.4,],
    176:	[67.35,	50.35],
    177:	[67.3,	50.3],
    178:	[67.25,	50.25],
    179:	[67.2,	50.2],
    180:	[67.15,	50.15],
    181:	[67.1,	50.1],
    182:    [67.05,	50.05],
    183:	[67,	50],
    184:	[66.95,	49.95],
    185:	[66.9,	49.9],
    186:	[66.85,	49.85],
    187:	[66.8,	49.8],
    188:	[66.75,	49.75],
    189:	[66.7,	49.7],
    190:	[66.65,	49.65],
    191:	[66.6,	49.6],
    192:	[66.55,	49.55],
    193:	[66.5,	49.5],
    194:	[66.45,	49.45],
    195:	[66.4,	49.4],
    196:	[66.35,	49.35],
    197:	[66.3,	49.3],
    198:	[66.25,	49.25],
    199:	[66.2,	49.2],
    200:	[66.15,	49.15],
    201:	[66.1,	49.1],
    202:	[66.05,	49.05],
    203:	[66,	49],
    204:	[65.95,	48.95],
    205:	[65.9,	48.9],
    206:	[65.85,	48.85],
    207:	[65.8,	48.8],
    208:	[65.75,	48.75],
    209:	[65.7,	48.7],
    210:	[65.65,	48.65],
    211:	[65.6,	48.6],
    212:	[65.55,	48.55],
    213:	[65.5,	48.5],
    214:	[65.45,	48.45],
    215:	[65.4,	48.4],
    216:	[65.35,	48.35],
    217:	[65.3,	48.3],
    218:	[65.25,	48.25],
    219:	[65.2,	48.2],
    220:	[65.15,	48.15],
    221:	[65.1,	48.1],
    222:	[65.05,	48.05],
    223:	[65,	48],
    224:	[64.95,	47.95],
    225:	[64.9,	47.9],
    226:	[64.85,	47.85],
    227:	[64.8,	47.8],
    228:	[64.75,	47.75],
    229:	[64.7,	47.7],
    230:	[64.65,	47.65],
    231:	[64.6,	47.6],
    232:	[64.55,	47.55],
    233:	[64.5,	47.5],
    234:	[64.45,	47.45],
    235:	[64.4,	47.4],
    236:	[64.35,	47.35],
    237:	[64.3,	47.3],
    238:	[64.25,	47.25],
    239:	[64.2,	47.2],
    240:	[64.15,	47.15],
    241:	[64.1,	47.1],
    242:	[64.05,	47.05],
    243:	[64,	47],
    244:	[63.95,	46.95],
    245:	[63.9,	46.9],
    246:	[63.85,	46.85],
    247:	[63.8,	46.8],
    248:	[63.75,	46.75],
    249:	[63.7,	46.7],
    250:	[63.65,	46.65],
    251:	[63.6,	46.6],
    252:	[63.55,	46.55],
    253:	[63.5,	46.5],
    254:	[63.45,	46.45],
    255:	[63.4,	46.4],
    256:	[63.35,	46.35],
    257:	[63.3,	46.3],
    258:	[63.25,	46.25],
    259:	[63.2,	46.2],
    260:	[63.15,	46.15],
    261:	[63.1,	46.1],
    262:	[63.05,	46.05],
    263:	[63,	46],
    264:	[62.95,	45.95],
    265:	[62.9,	45.9],
    266:	[62.85,	45.85],
    267:	[62.8,	45.8],
    268:	[62.75,	45.75],
    269:	[62.7,	45.7],
    270:	[62.65,	45.65],
    271:	[62.6,	45.6],
    272:	[62.55,	45.55],
    273:    [62.5,	45.5],
    274:	[62.45,	45.45],
    275:	[62.4,	45.4],
    276:	[62.35,	45.35],
    277:	[62.3,	45.3],
    278:	[62.25,	45.25],
    279:	[62.2,	45.2],
    280:	[62.15,	45.15],
    281:	[62.1,	45.1],
    282:	[62.05,	45.05],
    283:	[62,	45],
    284:	[61.95,	44.95],
    285:	[61.9,	44.9],
    286:    [61.85,	44.85],
    287:	[61.8,	44.8],
    288:	[61.75,	44.75],
    289:	[61.7,	44.7],
    290:	[61.65,	44.65],
    291:	[61.6,	44.6],
    292:	[61.55,	44.55],
    293:	[61.5,	44.5],
    294:	[61.45,	44.45],
    295:	[61.4,	44.4],
    296:	[61.35,	44.35],
    297:	[62,	44.3],
    298:	[61.95,	44.25],
    299:    [61.9,	44.2],
    300:	[61.85,	44.15],
    301:	[61.8,	44.1],
    302:	[61.75,	44.05],
    303:	[61.7,	44],
    304:	[61.65,	43.95],
    305:	[61.6,	43.9],
    306:	[61.55,	43.85],
    307:	[61.5,	43.8],
    308:	[61.45,	43.75],
    309:	[61.4,	43.7],
    310:	[61.35,	43.65],
    311:    [61.3,	43.6],
    312:	[61.25,	43.55],
    313:	[61.2,	43.5],
    314:	[61.15,	43.45],
    315:	[61.1,	43.4],
    316:    [61.05,	43.35],
    317:	[61,	43.3],
    318:	[60.95,	43.25],
    319:	[60.9,	43.2],
    320:	[60.85,	43.15],
    321:	[60.8,	43.1],
    322:	[60.75,	43.05],
    323:	[60.7,	43],
    324:	[60.65,	42.95,],
    325:	[60.6,	42.9],
    326:	[60.55,	42.85],
    327:    [60.5,	42.8],
    328:	[60.45,	42.75],
    329:	[60.4,	42.7],
    330:	[60.35,	42.65],
    331:    [60.3,	42.6],
    332:	[60.25,	42.55],
    333:	[60.2,	42.5],
    334:	[60.15, 42.45],
    335:	[60.1,	42.4],
    336:    [60.05,	42.35],
    337:	[60, 42.3],
    338:    [59.95,	42.25],
    339:    [59.9,	42.2],
    340:	[59.85,	42.15],
    341:	[59.8,	42.1],
    342:	[59.75,	42.05],
    343:	[59.7,	42],
    344:    [59.65,	41.95],
    345:	[59.6,	41.9],
    346:    [59.55,	41.85],
    347:	[59.5,	41.8],
    348:	[59.45,	41.75],
    349:	[59.4,	41.7],
    350:	[59.35,	41.65],
    351:	[59.3,	41.6],
    352:	[59.25,	41.55],
    353:	[59.2,	41.5],
    354:	[59.15,	41.45],
    355:	[59.1,	41.4],
    356:	[59.05,	41.35],
    357:	[59,	41.3],
    358:	[58.95,	41.25]}

    big12 = {"Baylor": [1,41], "Iowa State": [9,154], "Kansas": [1,17], "Kansas State": [12,143], "Oklahoma": [7,78],
             "Oklahoma State": [11,82], "TCU": [21, 214], "Texas": [9,78], "Texas Tech": [9,197], "West Virginia": [8,107]}
    big_east = {"Butler": [21,107], "Connecticut": [18,142], "Creighton": [7, 76], "DePaul": [81,146],
                "Georgetown": [8,135], "Marquette": [11,81], "Providence": [13,107], "Seton Hall": [15,96],
                "St. John's": [45,184], "Villanova": [1,71], "Xavier": [3,71]}
    sec = {"Alabama": [5,89], "Arkansas": [10,96], "Auburn": [8,152], "Florida": [1,45], "Georgia": [37,163],
           "Kentucky": [1,49], "Louisiana State": [12,143], "Missouri": [3,141], "Mississippi": [47,92],
           "Mississippi State": [23,218], "South Carolina": [26,163], "Tennessee": [5,83], "Texas A&M": [15,126],
           "Vanderbilt": [41,120]}
    big_ten = {"Illinois": [2,108], "Indiana": [14,67], "Iowa": [8,78], "Maryland": [14,112], "Michigan": [4,58],
               "Michigan State": [2,63], "Minnesota": [34,144], "Nebraska": [29,133], "Northwestern": [39,106],
               "Ohio State": [7,69], "Pennsylvania State": [24,124], "Purdue": [10,71], "Rutgers": [28,250],
               "Wisconsin": [3,62]}
    acc = {"Boston College": [73,180], "Clemson": [20,89], "Duke": [1,42], "Florida State": [4,95],
           "Georgia Tech": [43,141], "Louisville": [2,112], "Miami": [10,119], "North Carolina": [3,71],
           "North Carolina State": [25,116], "Notre Dame": [8,80], "Pittsburgh": [20,182], "Syracuse": [2,61],
           "Virginia": [1,74], "Virginia Tech": [16,134], "Wake Forest": [36,135]}
    pac12 = {"Arizona": [2,72], "Arizona State": [33,170], "California": [23,197], "Colorado": [22,97], "Oregon": [5,63],
             "Oregon State": [51,215], "Southern California": [22,165], "Stanford": [33,94], "UCLA": [8,86],
             "Utah": [13,284], "Washington": [47,130], "Washington State": [41,173]}
    mountain_west = {"Air Force": [112,307], "Boise State": [23,119], "Colorado State": [24,202],"Fresno State": [79,161],
                     "Nevada": [20,246], "UNLV": [23,206], "New Mexico": [10,300], "San Diego State": [6,103],
                     "San Jose State": [191,335], "Utah State": [25,125], "Wyoming": [70,291]}
    aac = {"Central Florida": [42,240], "Cincinnati": [6,113], "East Carolina": [126, 272], "Houston": [6,179],
           "Memphis": [19,84], "South Florida": [96,251], "SMU": [11,172], "Temple": [47,126], "Tulane": [133,270],
           "Tulsa": [67,169], "Wichita State": [2,82]}
    wcc = {"BYU": [18,91], "Gonzaga": [1,25], "Loyola Marymount": [98,215], "Pacific": [118,230], "Pepperdine": [97,288],
           "Portland": [121,302], "Saint Mary's": [18,77], "San Diego": [93,257], "San Francisco": [27,194],
           "Santa Clara": [72,249]}
    atlantic10 = {"Davidson": [46,90], "Dayton": [3,135], "Duquesne": [95,244], "Fordham": [133,289],
                  "George Mason": [112,181], "George Washington": [54,245], "La Salle": [55,241], "Massachusetts": [56,192],
                  "Rhode Island": [45,210], "Richmond": [62,168], "Saint Bonaventure": [40, 122],
                  "Saint Joseph's": [48,232], "Saint Louis": [13,241], "VCU": [15,119]}
    southern = {"Chattanooga": [100,290], "The Citadel": [223,345], "East Tennessee State": [77,307], "Furman": [83,343],
                "Mercer": [96,195], "Samford": [178,325], "UNC Greensboro": [102,302], "VMI": [152,333],
                "Western Carolina": [169,329], "Wofford": [19,251]}
    caa = {"Charleston": [132,267], "Delaware": [124,287], "Drexel": [75,257], "Elon": [136,309], "Hofstra": [106,293],
           "James Madison": [94,286], "Northeastern": [115,238], "Towson": [94,326], "UNC Wilmington": [74,287],
           "William and Mary": [96,333]}
    maac = {"Canisius": [129,317], "Fairfield": [124,295], "Iona": [67,238], "Manhattan": [85,318], "Marist": [220,318],
            "Monmouth": [97,312], "Niagara": [144,310], "Quinnipiac": [159,286], "Rider": [145,296],
            "Saint Peter's": [120,316], "Siena": [134,294]}
    cusa = {"Charlotte": [125,287], "FAU": [124,284], "FIU": [154,282], "Louisiana Tech": [40,189], "Marshall": [83,213],
            "Middle Tennessee": [49,278], "North Texas": [71,299], "Old Dominion": [70,260], "Rice": [144,299],
            "Southern Mississippi": [63,330], "UAB": [55,179], "UTEP": [98,266], "UTSA": [150,336],
            "Western Kentucky": [57,233]}
    mvc = {"Bradley": [107,294], "Drake": [67,247], "Evansville": [79,304], "Illinois State": [65,212],
           "Indiana State": [104,208], "Loyola Chicago": [17,272], "Missouri State": [77,225], "Northern Iowa": [36,170],
           "Southern Illinois": [123,204], "Valparaiso": [57,198]}
    sun_belt = {"Appalachian State": [175,327], "Arkansas-Little Rock": [90,311], "Arkansas State": [141,299],
                "Coastal Carolina": [145,229], "Georgia Southern": [165,299], "Georgia State": [86,191],
                "Louisiana": [84,224], "Louisiana-Monroe": [148,322], "South Alabama": [151,291],
                "Texas-Arlington": [91,242], "Texas State": [105,275], "Troy": [161,290]}
    wac = {"Abiline Christian": [89,346], "California Baptist": [190,209], "Chicago State": [288,352],
           "Dixie State": [276,316], "Grand Canyon": [102,259], "Lamar": [135,345], "New Mexico State": [55,161],
           "Sam Houston State": [122,281], "Seattle": [131,278], "SF Austin State": [63,301], "Tarleton State": [200,244],
           "UT Rio Grande Valley": [177,343], "Utah Valley": [102,318]}
    mac = {"Akron": [69,245], "Ball State": [115,286], "Bowling Green State": [112,280], "Buffalo": [15,181],
           "Central Michigan": [93,317], "Eastern Michigan": [135,320], "Kent State": [120,200], "Miami (OH)": [149,268],
           "Northern Illinois": [130,336], "Ohio": [76,216], "Toledo": [75,202], "Western Michigan": [138,238]}
    big_west = {"Cal Poly": [122,322], "CSU Bakersfield": [110,264], "CSU Fullerton": [154,284],
                "CSU Northridge": [222,322], "Hawaii": [72,243], "Long Beach State": [51,279], "UC Davis": [131,321],
                "UC Irvine": [100,236], "UC Riverside": [110,310], "UC San Diego": [239,259], "UC Santa Barbara": [78,316]}
    ivy = {"Brown": [164,304], "Columbia": [116,350], "Cornell": [203,329], "Dartmouth": [197,300], "Harvard": [54,226],
            "Pennsylvania": [127,283], "Princeton": [82,299], "Yale": [71,211]}
    summit = {"Denver": [63,330], "Kansas City": [220,321], "Nebraska-Omaha": [161,347], "North Dakota": [177,345],
              "North Dakota State": [81,181], "Oral Roberts": [101,285], "St. Thomas": [266,346], "South Dakota": [96,286],
              "South Dakota State": [76,183], "Western Illinois": [178,330]}
    big_sky = {"Eastern Washington": [112,295], "Idaho": [146,343], "Idaho State": [247,342], "Montana": [95,249],
               "Montana State": [158,320], "Northern Arizona": [204,344], "Northern Colorado": [103,161],
               "Portland State": [157,297], "Sacramento State": [192,293], "Southern Utah": [144,347],
               "Weber State": [93,272]}
    ovc = {"Austin Peay": [152,316], "Belmont": [38,146], "Eastern Illinois": [226,355], "Morehead State": [142,339],
           "Murray State": [12,196], "Southeast Missouri State": [228,335], "Southern Illinois": [268,329],
           "Tennessee-Martin": [180,340], "Tennessee State": [176,327], "Tennessee Tech": [198,330]}
    america_east = {"Albany": [143,287], "Binghamton": [290,341], "Hartford": [184,332], "Maine": [274,353],
                    "Maryland-Baltimore County": [183,340], "Massachusetts-Lowell": [220,319], "New Hampshire": [203,342],
                    "NJIT": [200,340], "Stony Brook": [95,251], "Vermont": [82,177]}
    atlantic_sun = {"Bellarmine": [171,213], "Central Arkansas": [230,348], "Eastern Kentucky": [136,296],
                    "Florida Gulf Coast": [121,265], "Jacksonville": [187,338], "Jacksonville State": [136,317],
                    "Kennesaw State": [222,351], "Liberty": [104,331], "Lipscomb": [63,305], "North Alabama": [269,307],
                    "North Florida": [162,304], "Stetson": [237,334]}
    big_south = {"Campbell": [204,322], "Charleston-Southern": [180,351], "Gardner-Webb": [187,282], "Hampton": [197,329],
                 "High Point": [164,341], "Longwood": [160,348], "North Carolina A&T State": [252,349],
                 "Presbyterian": [202,349], "Radford": [141,308], "UNC Asheville": [123,347],
                 "South Carolina Upstate": [160,336], "Winthrop": [108,267]}
    horizon = {"Cleveland State": [100,311], "Detroit Mercy": [79,314], "Green Bay": [78,332],
               "Illinois-Chicago": [177,324], "IUPUI": [188,358], "Milwaukee": [128,324], "Northern Kentucky": [106,290],
               "Oakland": [92,263], "Purdue-Fort Wayne": [145,292], "Robert Morris": [150,316], "Wright State": [83,253],
               "Youngstown State": [177,324]}
    patriot = {"American": [153,343], "Army": [146,299], "Boston": [136,263], "Bucknell": [75,339], "Colgate": [36,318],
               "Holy Cross": [181,346], "Lafayette": [194,326], "Lehigh": [106,308], "Loyola": [139,317], "Navy": [140,316]}
    northeast = {"Bryant": [165,345], "Central Connecticut State": [225,351], "Fairleigh Dickinson": [233,352],
                 "Long Island": [173,318], "Merrimack": [252,302], "Mount St. Mary's": [215,328], "Sacred Heart": [224,325],
                 "St. Francis (NY)": [181,341], "Saint Francis (PA)": [191,338], "Wagner": [116,334]}
    meac = {"Coppin State": [280,347], "Delaware State": [269,357], "Howard": [253,349],
            "Maryland-Eastern Shore": [257,351], "Morgan State": [226,336], "Norfolk State": [207,319],
            "North Carolina Central": [112,329], "South Carolina State": [282,345]}
    southland = {"Houston Baptist": [234,342], "Incarnate Word": [249,348], "McNeese State": [241,338],
                 "New Orleans": [210,346], "Nicholls State": [197,338], "Northwestern Louisiana": [147,346],
                 "Southeastern Louisiana": [236,339], "Texas A&M Corpus Christi": [194,333]}
    swac = {"Alabama A&M": [311,351], "Alabama State": [287,344], "Alcorn State": [277,349],
            "Arkansas-Pine Bluff": [315,354], "Bethune-Cookman": [279,342], "Florida A&M": [298,350],
            "Grambling": [290,351], "Jackson State": [268,337], "Mississippi Valley State": [267,356],
            "Prairie View A&M": [240,341], "Southern": [192,338], "Texas Southern": [186,305]}

    division1 = [big12, big_east, sec, big_ten, acc, pac12, mountain_west, aac, wcc, atlantic10, southern, caa, maac, cusa,
                 mvc, sun_belt, wac, mac, big_west, ivy, summit, big_sky, ovc, america_east, atlantic_sun, big_south,
                 horizon, patriot, northeast, meac, southland, swac]

    team_ratings = {}
    ratings_played = {}
    standings = {}
    rankings = {}
    auto_bids = {}
    at_large_bids = {}
    tournament_teams = {}
    tournament_seeds = {}


    def assign_rating_all():
        for conference in division1:
            for team in conference.keys():
                assigned_rating = random.randint(conference[team][0], conference[team][1])
                team_ratings[team] = assigned_rating
        ratings_sort(team_ratings)

    def assign_rating_one(conference):
        for team in conference.keys():
            assigned_rating = random.randint(conference[team][0], conference[team][1])
            team_ratings[team] = assigned_rating
        ratings_sort(team_ratings)

    def preseason():
        preseason_tally = {}
        team_list = []
        for conference in division1:
            for team in conference.keys():
                team_list.append(team)
                preseason_tally[team] = 0
                rankings[team] = [0, 0]
                ratings_played[team] = [0,0]

        def check_tallies():
            for team in team_list:
                if preseason_tally[team] <= 7:
                    return True
            return False

        while check_tallies() == True:
            for team in team_list:
                team1 = team
                if preseason_tally[team] <= 7:
                    team2 = team_list[random.randint(0, len(team_list) - 1)]
                    if preseason_tally[team2] <= 7:
                        while team1 == team2:
                            team2 = team_list[random.randint(0, len(team_list) - 1)]
                        rating1 = team_ratings[team1]
                        rating2 = team_ratings[team2]
                        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
                        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
                        while score1 == score2:
                            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
                            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

                        print(team1 + " " + str(score1) + " - " + str(score2) + " " + team2)

                        if score1 > score2:
                            ratings_played[team1][0] += rating2
                            ratings_played[team1][1] += 1
                            rankings[team1][0] = rankings[team1][0] + 1
                            rankings[team2][1] = rankings[team2][1] + 1
                            preseason_tally[team1] = preseason_tally[team1] + 1
                            preseason_tally[team2] = preseason_tally[team2] + 1
                        elif score2 > score1:
                            ratings_played[team2][0] += rating1
                            ratings_played[team2][1] += 1
                            rankings[team2][0] = rankings[team2][0] + 1
                            rankings[team1][1] = rankings[team1][1] + 1
                            preseason_tally[team1] = preseason_tally[team1] + 1
                            preseason_tally[team2] = preseason_tally[team2] + 1
        print(rankings)
        print(preseason_tally)

    def league_season(league):
        league_list = []
        points_tally = {}
        for team in league.keys():
            league_list.append(team)
            standings[team] = [0,0]
            points_tally[team] = [0,0]

        for i in range(0, len(league_list) - 1):
            for j in range(i + 1, len(league_list)):
                team1 = league_list[i]
                team2 = league_list[j]
                rating1 = team_ratings[team1]
                rating2 = team_ratings[team2]
                score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
                score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
                while score1 == score2:
                    score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
                    score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

                print(team1 + " " + str(score1) + " - " + str(score2) + " " + team2)

                ratings_played[team1][1] += 1
                ratings_played[team2][1] += 1
                if score1 > score2:
                    ratings_played[team1][0] += rating2
                    standings[team1][0] = standings[team1][0] + 1
                    standings[team2][1] = standings[team2][1] + 1
                    rankings[team1][0] = rankings[team1][0] + 1
                    rankings[team2][1] = rankings[team2][1] + 1
                elif score2 > score1:
                    ratings_played[team2][0] += rating1
                    standings[team2][0] = standings[team2][0] + 1
                    standings[team1][1] = standings[team1][1] + 1
                    rankings[team2][0] = rankings[team2][0] + 1
                    rankings[team1][1] = rankings[team1][1] + 1

                points_tally[team1][0] += score1
                points_tally[team1][1] += score2
                points_tally[team2][0] += score2
                points_tally[team2][1] += score1

        for i in range(0, len(league_list) - 1):
            for j in range(i + 1, len(league_list)):
                team1 = league_list[i]
                team2 = league_list[j]
                rating1 = team_ratings[team1]
                rating2 = team_ratings[team2]
                score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
                score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
                while score1 == score2:
                    score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
                    score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

                print(team2 + " " + str(score2) + " - " + str(score1) + " " + team1)

                ratings_played[team1][1] += 1
                ratings_played[team2][1] += 1
                if score1 > score2:
                    ratings_played[team1][0] += rating2
                    standings[team1][0] = standings[team1][0] + 1
                    standings[team2][1] = standings[team2][1] + 1
                    rankings[team1][0] = rankings[team1][0] + 1
                    rankings[team2][1] = rankings[team2][1] + 1
                elif score2 > score1:
                    ratings_played[team2][0] += rating1
                    standings[team2][0] = standings[team2][0] + 1
                    standings[team1][1] = standings[team1][1] + 1
                    rankings[team2][0] = rankings[team2][0] + 1
                    rankings[team1][1] = rankings[team1][1] + 1

                points_tally[team1][0] += score1
                points_tally[team1][1] += score2
                points_tally[team2][0] += score2
                points_tally[team2][1] += score1

        print(standings)
        standings_sort(standings)
        standings_sort(points_tally)

    def ratings_sort(ratings_to_sort):
        ratings_sorted = sorted(ratings_to_sort.items(), key=lambda item: item[1])
        print(ratings_sorted)

    def standings_sort(standings_to_sort):
        standings_sorted = sorted(standings_to_sort.items(), key=lambda item: item[1], reverse=True)
        print(standings_sorted)
        return standings_sorted

    def final_rankings():
        rankings_sorted = sorted(rankings.items(), key=lambda item: ((item[1][0]/(item[1][0] + item[1][1]) * ((359 * ratings_played[item[0]][1] - ratings_played[item[0]][0])/ratings_played[item[0]][1])), item[1][0]), reverse=True)
        # print(rankings_sorted)
        return rankings_sorted

    def final_rankings_sort(tournament):
        rankings_sorted = sorted(tournament.items(), key=lambda item: ((item[1][0]/(item[1][0] + item[1][1]) * ((359 * ratings_played[item[0]][1] - ratings_played[item[0]][0])/ratings_played[item[0]][1])), item[1][0]), reverse=True)
        # print(rankings_sorted)
        return rankings_sorted

    def eight_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = seedings[8][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (8) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = 8

        # Game 2
        team1 = seedings[2][0]
        team2 = seedings[7][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (7) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = 7

        # Game 3
        team1 = seedings[3][0]
        team2 = seedings[6][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (6) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = 6

        # Game 4
        team1 = seedings[4][0]
        team2 = seedings[5][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (5) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = 5

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def nine_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 9

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_FR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = seedings[7][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (7) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = 7

        # Game 3
        team1 = seedings[3][0]
        team2 = seedings[6][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (6) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = 6

        # Game 4
        team1 = seedings[4][0]
        team2 = seedings[5][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (5) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = 5

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def ten_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 9

        # Game 2
        team1 = seedings[7][0]
        team2 = seedings[10][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2 = team1
            winner_FR2_seed = 7
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2 = team2
            winner_FR2_seed = 10

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_FR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = winner_FR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = winner_FR2_seed

        # Game 3
        team1 = seedings[3][0]
        team2 = seedings[6][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (6) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team1][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = 6

        # Game 4
        team1 = seedings[4][0]
        team2 = seedings[5][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (5) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = 5

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def eleven_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 9

        # Game 2
        team1 = seedings[7][0]
        team2 = seedings[10][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2 = team1
            winner_FR2_seed = 7
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2 = team2
            winner_FR2_seed = 10

        # Game 3
        team1 = seedings[6][0]
        team2 = seedings[11][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3 = team1
            winner_FR3_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3 = team2
            winner_FR3_seed = 11

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_FR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = winner_FR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = winner_FR2_seed

        # Game 3
        team1 = seedings[3][0]
        team2 = winner_FR3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + "(" + str(winner_FR3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = winner_FR3_seed

        # Game 4
        team1 = seedings[4][0]
        team2 = seedings[5][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (5) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = 5

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def twelve_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 9

        # Game 2
        team1 = seedings[7][0]
        team2 = seedings[10][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2 = team1
            winner_FR2_seed = 7
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2 = team2
            winner_FR2_seed = 10

        # Game 3
        team1 = seedings[6][0]
        team2 = seedings[11][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3 = team1
            winner_FR3_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3 = team2
            winner_FR3_seed = 11

        # Game 3
        team1 = seedings[5][0]
        team2 = seedings[12][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (12) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR4 = team1
            winner_FR4_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR4 = team2
            winner_FR4_seed = 11

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_FR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = winner_FR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = winner_FR2_seed

        # Game 3
        team1 = seedings[3][0]
        team2 = winner_FR3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = winner_FR3_seed

        # Game 4
        team1 = seedings[4][0]
        team2 = winner_FR4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = winner_FR4_seed

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def thirteen_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        team1 = seedings[12][0]
        team2 = seedings[13][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(12) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 12
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 13

        # Second Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1 = team1
            winner_SR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1 = team2
            winner_SR1_seed = 9

        # Game 2
        team1 = seedings[7][0]
        team2 = seedings[10][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2 = team1
            winner_SR2_seed = 7
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2 = team2
            winner_SR2_seed = 10

        # Game 3
        team1 = seedings[6][0]
        team2 = seedings[11][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3 = team1
            winner_SR3_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3 = team2
            winner_SR3_seed = 11

        # Game 3
        team1 = seedings[5][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4 = team1
            winner_SR4_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4 = team2
            winner_SR4_seed = 11

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_SR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_SR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = winner_SR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = winner_SR2_seed

        # Game 3
        team1 = seedings[3][0]
        team2 = winner_SR3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + "(" + str(winner_SR3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = winner_SR3_seed

        # Game 4
        team1 = seedings[4][0]
        team2 = winner_SR4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = winner_SR4_seed

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def fourteen_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        # Game 1
        team1 = seedings[12][0]
        team2 = seedings[13][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(12) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 12
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 13

        # Game 2
        team1 = seedings[11][0]
        team2 = seedings[14][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(11) " + team1 + " " + str(score1) + " - " + str(score2) + " (14) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2 = team1
            winner_FR2_seed = 11
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2 = team2
            winner_FR2_seed = 14

        # Second Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1 = team1
            winner_SR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1 = team2
            winner_SR1_seed = 9

        # Game 2
        team1 = seedings[7][0]
        team2 = seedings[10][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2 = team1
            winner_SR2_seed = 7
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2 = team2
            winner_SR2_seed = 10

        # Game 3
        team1 = seedings[6][0]
        team2 = winner_FR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3 = team1
            winner_SR3_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3 = team2
            winner_SR3_seed = winner_FR2_seed

        # Game 4
        team1 = seedings[5][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4 = team1
            winner_SR4_seed = 5
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4 = team2
            winner_SR4_seed = winner_FR1_seed

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_SR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_SR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = winner_SR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = winner_SR2_seed

        # Game 3
        team1 = seedings[3][0]
        team2 = winner_SR3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = winner_SR3_seed

        # Game 4
        team1 = seedings[4][0]
        team2 = winner_SR4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR4_seed) + ") "+ team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = winner_SR4_seed

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def fifteen_tourney(conference):
        seedings = {}
        seed = 1
        for team in standings_sort(standings):
            if team[0] in conference.keys():
                seedings[seed] = team[0], standings[team[0]]
                seed += 1
        print(seedings)

        # First Round
        # Game 1
        team1 = seedings[12][0]
        team2 = seedings[13][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(12) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1 = team1
            winner_FR1_seed = 12
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1 = team2
            winner_FR1_seed = 13

        # Game 2
        team1 = seedings[11][0]
        team2 = seedings[14][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(11) " + team1 + " " + str(score1) + " - " + str(score2) + " (14) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2 = team1
            winner_FR2_seed = 11
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2 = team2
            winner_FR2_seed = 14

        # Game 2
        team1 = seedings[10][0]
        team2 = seedings[15][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(10) " + team1 + " " + str(score1) + " - " + str(score2) + " (15) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3 = team1
            winner_FR3_seed = 10
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3 = team2
            winner_FR3_seed = 15

        # Second Round
        # Game 1
        team1 = seedings[8][0]
        team2 = seedings[9][0]
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1 = team1
            winner_SR1_seed = 8
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1 = team2
            winner_SR1_seed = 9

        # Game 2
        team1 = seedings[7][0]
        team2 = winner_FR3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR3_seed) + ")" + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2 = team1
            winner_SR2_seed = 7
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2 = team2
            winner_SR2_seed = winner_FR3_seed

        # Game 3
        team1 = seedings[6][0]
        team2 = winner_FR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3 = team1
            winner_SR3_seed = 6
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3 = team2
            winner_SR3_seed = winner_FR2_seed

        # Game 4
        team1 = seedings[5][0]
        team2 = winner_FR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team1][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4 = team1
            winner_SR4_seed = 5
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4 = team2
            winner_SR4_seed = winner_FR1_seed

        # Quarter-Finals
        # Game 1
        team1 = seedings[1][0]
        team2 = winner_SR1
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR1_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF1 = team1
            winner_QF1_seed = 1
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF1 = team2
            winner_QF1_seed = winner_SR1_seed

        # Game 2
        team1 = seedings[2][0]
        team2 = winner_SR2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF2 = team1
            winner_QF2_seed = 2
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF2 = team2
            winner_QF2_seed = winner_SR2_seed

        # Game 3
        team1 = seedings[3][0]
        team2 = winner_SR3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF3 = team1
            winner_QF3_seed = 3
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF3 = team2
            winner_QF3_seed = winner_SR3_seed

        # Game 4
        team1 = seedings[4][0]
        team2 = winner_SR4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_SR4_seed) + ") "+ team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_QF4 = team1
            winner_QF4_seed = 4
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_QF4 = team2
            winner_QF4_seed = winner_SR4_seed

        # Semi-Finals
        # Game 1
        team1 = winner_QF1
        team2 = winner_QF4
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF4_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF1 = team1
            winner_SF1_seed = winner_QF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF1 = team2
            winner_SF1_seed = winner_QF4_seed

        # Game 2
        team1 = winner_QF2
        team2 = winner_QF3
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_QF2_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_QF3_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SF2 = team1
            winner_SF2_seed = winner_QF2_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SF2 = team2
            winner_SF2_seed = winner_QF3_seed

        # Final
        team1 = winner_SF1
        team2 = winner_SF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            ratings_played[team1][0] += rating2
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_F = team1
            winner_F_seed = winner_SF1_seed
        elif score2 > score1:
            ratings_played[team2][0] += rating1
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_F = team2
            winner_F_seed = winner_SF2_seed

        auto_bids[winner_F] = winner_F_seed, rankings[winner_F]

    def conference_tourneys():
        for conference in division1:
            league_season(conference)
            if len(conference.keys()) == 8:
                eight_tourney(conference)
            if len(conference.keys()) == 9:
                nine_tourney(conference)
            if len(conference.keys()) == 10:
                ten_tourney(conference)
            if len(conference.keys()) == 11:
                eleven_tourney(conference)
            if len(conference.keys()) == 12:
                twelve_tourney(conference)
            if len(conference.keys()) == 13:
                thirteen_tourney(conference)
            if len(conference.keys()) == 14:
                fourteen_tourney(conference)
            if len(conference.keys()) == 15:
                fifteen_tourney(conference)

        print(auto_bids)

    def march_madness():
        for team in final_rankings():
            if team[0] not in auto_bids.keys() and len(at_large_bids.keys()) < 68 - len(auto_bids):
                at_large_bids[team[0]] = rankings[team[0]]

        print(at_large_bids)

        for team in auto_bids.keys():
            tournament_teams[team] = rankings[team]
        tournament_teams.update(at_large_bids)

        print(tournament_teams)
        print(len(at_large_bids.keys()))
        print(len(tournament_teams.keys()))

        tournament = []

        ones = []
        twos = []
        threes = []
        fours = []
        fives = []
        sixes = []
        sevens = []
        eights = []
        nines = []
        tens = []
        elevens = []
        twelves = []
        thirteens = []
        fourteens = []
        fifteens = []
        sixteens = []

        for team in range(0, len(tournament_teams.keys())):
            if team < 4:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 1
                ones.append(final_rankings_sort(tournament_teams)[team][0])
            if 4 <= team < 8:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 2
                twos.append(final_rankings_sort(tournament_teams)[team][0])
            if 8 <= team < 12:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 3
                threes.append(final_rankings_sort(tournament_teams)[team][0])
            if 12 <= team < 16:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 4
                fours.append(final_rankings_sort(tournament_teams)[team][0])
            if 16 <= team < 20:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 5
                fives.append(final_rankings_sort(tournament_teams)[team][0])
            if 20 <= team < 24:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 6
                sixes.append(final_rankings_sort(tournament_teams)[team][0])
            if 24 <= team < 28:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 7
                sevens.append(final_rankings_sort(tournament_teams)[team][0])
            if 28 <= team < 32:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 8
                eights.append(final_rankings_sort(tournament_teams)[team][0])
            if 32 <= team < 36:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 9
                nines.append(final_rankings_sort(tournament_teams)[team][0])
            if 36 <= team < 40:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 10
                tens.append(final_rankings_sort(tournament_teams)[team][0])
            if 40 <= team < 45:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 11
                elevens.append(final_rankings_sort(tournament_teams)[team][0])
            if 45 <= team < 50:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 12
                twelves.append(final_rankings_sort(tournament_teams)[team][0])
            if 50 <= team < 54:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 13
                thirteens.append(final_rankings_sort(tournament_teams)[team][0])
            if 54 <= team < 58:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 14
                fourteens.append(final_rankings_sort(tournament_teams)[team][0])
            if 58 <= team < 62:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 15
                fifteens.append(final_rankings_sort(tournament_teams)[team][0])
            if 62 <= team < 68:
                tournament_seeds[final_rankings_sort(tournament_teams)[team][0]] = 16
                sixteens.append(final_rankings_sort(tournament_teams)[team][0])
        print(ratings_played)
        print(final_rankings())
        print(tournament_seeds)
        print(ones)

        # Play-ins
        # Game 1
        random1 = random.randint(0, len(elevens) - 1)
        random2 = random.randint(0, len(elevens) - 1)
        while random1 == random2:
            random2 = random.randint(0, len(elevens) - 1)

        team1 = elevens[random1]
        team2 = elevens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(11) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_PI1 = team1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_PI1 = team2

        # Game 2
        random1 = random.randint(0, len(twelves) - 1)
        random2 = random.randint(0, len(twelves) - 1)
        while random1 == random2:
            random2 = random.randint(0, len(twelves) - 1)

        team1 = twelves[random1]
        team2 = twelves[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(12) " + team1 + " " + str(score1) + " - " + str(score2) + " (12) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_PI2 = team1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_PI2 = team2

        # Game 3
        random1 = random.randint(0, len(sixteens) - 1)
        random2 = random.randint(0, len(sixteens) - 1)
        while random1 == random2:
            random2 = random.randint(0, len(sixteens) - 1)

        team1 = sixteens[random1]
        team2 = sixteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(16) " + team1 + " " + str(score1) + " - " + str(score2) + " (16) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_PI3 = team1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_PI3 = team2

        # Game 4
        random3 = random.randint(0, len(sixteens) - 1)
        random4 = random.randint(0, len(sixteens) - 1)
        while sixteens[random3] in tournament:
            random3 = random.randint(0, len(sixteens) - 1)
        while sixteens[random4] in tournament:
            random4 = random.randint(0, len(sixteens) - 1)

        team1 = sixteens[random3]
        team2 = sixteens[random4]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(16) " + team1 + " " + str(score1) + " - " + str(score2) + " (16) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_PI4 = team1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_PI4 = team2

        # First Round
        # Game 1a
        random1 = random.randint(0, len(ones) - 1)
        random2 = random.randint(0, len(sixteens) - 1)
        while sixteens[random2] in tournament:
            random2 = random.randint(0, len(sixteens) - 1)

        team1 = ones[random1]
        team2 = sixteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (16) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1a = team1
            winner_FR1a_seed = 1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1a = team2
            winner_FR1a_seed = 16

        # Game 2a
        random1 = random.randint(0, len(twos) - 1)
        random2 = random.randint(0, len(fifteens) - 1)

        team1 = twos[random1]
        team2 = fifteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (15) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2a = team1
            winner_FR2a_seed = 2
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2a = team2
            winner_FR2a_seed = 15

        # Game 3a
        random1 = random.randint(0, len(threes) - 1)
        random2 = random.randint(0, len(fourteens) - 1)

        team1 = threes[random1]
        team2 = fourteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (14) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3a = team1
            winner_FR3a_seed = 3
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3a = team2
            winner_FR3a_seed = 14

        # Game 4a
        random1 = random.randint(0, len(fours) - 1)
        random2 = random.randint(0, len(thirteens) - 1)

        team1 = fours[random1]
        team2 = thirteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR4a = team1
            winner_FR4a_seed = 4
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR4a = team2
            winner_FR4a_seed = 13

        # Game 5a
        random1 = random.randint(0, len(fives) - 1)
        random2 = random.randint(0, len(twelves) - 1)
        while twelves[random2] in tournament:
            random2 = random.randint(0, len(twelves) - 1)

        team1 = fives[random1]
        team2 = twelves[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (12) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR5a = team1
            winner_FR5a_seed = 5
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR5a = team2
            winner_FR5a_seed = 12

        # Game 6a
        random1 = random.randint(0, len(sixes) - 1)

        team1 = sixes[random1]
        team2 = winner_PI1
        tournament.append(team1)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR6a = team1
            winner_FR6a_seed = 6
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR6a = team2
            winner_FR6a_seed = 11

        # Game 7a
        random1 = random.randint(0, len(sevens) - 1)
        random2 = random.randint(0, len(tens) - 1)

        team1 = sevens[random1]
        team2 = tens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR7a = team1
            winner_FR7a_seed = 7
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR7a = team2
            winner_FR7a_seed = 10

        # Game 8a
        random1 = random.randint(0, len(eights) - 1)
        random2 = random.randint(0, len(nines) - 1)

        team1 = eights[random1]
        team2 = nines[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR8a = team1
            winner_FR8a_seed = 8
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR8a = team2
            winner_FR8a_seed = 9

        # Game 1b
        random1 = random.randint(0, len(ones) - 1)
        random2 = random.randint(0, len(sixteens) - 1)
        while ones[random1] in tournament:
            random1 = random.randint(0, len(ones) - 1)
        while sixteens[random2] in tournament:
            random2 = random.randint(0, len(sixteens) - 1)

        team1 = ones[random1]
        team2 = sixteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (16) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1b = team1
            winner_FR1b_seed = 1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1b = team2
            winner_FR1b_seed = 16

        # Game 2b
        random1 = random.randint(0, len(twos) - 1)
        random2 = random.randint(0, len(fifteens) - 1)
        while twos[random1] in tournament:
            random1 = random.randint(0, len(twos) - 1)
        while fifteens[random2] in tournament:
            random2 = random.randint(0, len(fifteens) - 1)

        team1 = twos[random1]
        team2 = fifteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (15) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2b = team1
            winner_FR2b_seed = 2
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2b = team2
            winner_FR2b_seed = 15

        # Game 3b
        random1 = random.randint(0, len(threes) - 1)
        random2 = random.randint(0, len(fourteens) - 1)
        while threes[random1] in tournament:
            random1 = random.randint(0, len(threes) - 1)
        while fourteens[random2] in tournament:
            random2 = random.randint(0, len(fourteens) - 1)

        team1 = threes[random1]
        team2 = fourteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (14) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3b = team1
            winner_FR3b_seed = 3
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3b = team2
            winner_FR3b_seed = 14

        # Game 4b
        random1 = random.randint(0, len(fours) - 1)
        random2 = random.randint(0, len(thirteens) - 1)
        while fours[random1] in tournament:
            random1 = random.randint(0, len(fours) - 1)
        while thirteens[random2] in tournament:
            random2 = random.randint(0, len(thirteens) - 1)

        team1 = fours[random1]
        team2 = thirteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR4b = team1
            winner_FR4b_seed = 4
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR4b = team2
            winner_FR4b_seed = 13

        # Game 5b
        random1 = random.randint(0, len(fives) - 1)
        while fives[random1] in tournament:
            random1 = random.randint(0, len(fives) - 1)

        team1 = fives[random1]
        team2 = winner_PI2
        tournament.append(team1)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (12) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR5b = team1
            winner_FR5b_seed = 5
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR5b = team2
            winner_FR5b_seed = 12

        # Game 6b
        random1 = random.randint(0, len(sixes) - 1)
        random2 = random.randint(0, len(elevens) - 1)
        while sixes[random1] in tournament:
            random1 = random.randint(0, len(sixes) - 1)
        while elevens[random2] in tournament:
            random2 = random.randint(0, len(elevens) - 1)

        team1 = sixes[random1]
        team2 = elevens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR6b = team1
            winner_FR6b_seed = 6
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR6b = team2
            winner_FR6b_seed = 11

        # Game 7b
        random1 = random.randint(0, len(sevens) - 1)
        random2 = random.randint(0, len(tens) - 1)
        while sevens[random1] in tournament:
            random1 = random.randint(0, len(sevens) - 1)
        while tens[random2] in tournament:
            random2 = random.randint(0, len(tens) - 1)

        team1 = sevens[random1]
        team2 = tens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR7b = team1
            winner_FR7b_seed = 7
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR7b = team2
            winner_FR7b_seed = 10

        # Game 8b
        random1 = random.randint(0, len(eights) - 1)
        random2 = random.randint(0, len(nines) - 1)
        while eights[random1] in tournament:
            random1 = random.randint(0, len(eights) - 1)
        while nines[random2] in tournament:
            random2 = random.randint(0, len(nines) - 1)

        team1 = eights[random1]
        team2 = nines[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR8b = team1
            winner_FR8b_seed = 8
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR8b = team2
            winner_FR8b_seed = 9

        # Game 1c
        random1 = random.randint(0, len(ones) - 1)
        while ones[random1] in tournament:
            random1 = random.randint(0, len(ones) - 1)

        team1 = ones[random1]
        team2 = winner_PI3
        tournament.append(team1)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (16) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1c = team1
            winner_FR1c_seed = 1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1c = team2
            winner_FR1c_seed = 16

        # Game 2c
        random1 = random.randint(0, len(twos) - 1)
        random2 = random.randint(0, len(fifteens) - 1)
        while twos[random1] in tournament:
            random1 = random.randint(0, len(twos) - 1)
        while fifteens[random2] in tournament:
            random2 = random.randint(0, len(fifteens) - 1)

        team1 = twos[random1]
        team2 = fifteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (15) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2c = team1
            winner_FR2c_seed = 2
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2c = team2
            winner_FR2c_seed = 15

        # Game 3c
        random1 = random.randint(0, len(threes) - 1)
        random2 = random.randint(0, len(fourteens) - 1)
        while threes[random1] in tournament:
            random1 = random.randint(0, len(threes) - 1)
        while fourteens[random2] in tournament:
            random2 = random.randint(0, len(fourteens) - 1)

        team1 = threes[random1]
        team2 = fourteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (14) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3c = team1
            winner_FR3c_seed = 3
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3c = team2
            winner_FR3c_seed = 14

        # Game 4c
        random1 = random.randint(0, len(fours) - 1)
        random2 = random.randint(0, len(thirteens) - 1)
        while fours[random1] in tournament:
            random1 = random.randint(0, len(fours) - 1)
        while thirteens[random2] in tournament:
            random2 = random.randint(0, len(thirteens) - 1)

        team1 = fours[random1]
        team2 = thirteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR4c = team1
            winner_FR4c_seed = 4
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR4c = team2
            winner_FR4c_seed = 13

        # Game 5c
        random1 = random.randint(0, len(fives) - 1)
        random2 = random.randint(0, len(twelves) - 1)
        while fives[random1] in tournament:
            random1 = random.randint(0, len(fives) - 1)
        while twelves[random2] in tournament:
            random2 = random.randint(0, len(twelves) - 1)

        team1 = fives[random1]
        team2 = twelves[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (12) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR5c = team1
            winner_FR5c_seed = 5
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR5c = team2
            winner_FR5c_seed = 12

        # Game 6c
        random1 = random.randint(0, len(sixes) - 1)
        random2 = random.randint(0, len(elevens) - 1)
        while sixes[random1] in tournament:
            random1 = random.randint(0, len(sixes) - 1)
        while elevens[random2] in tournament:
            random2 = random.randint(0, len(elevens) - 1)

        team1 = sixes[random1]
        team2 = elevens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR6c = team1
            winner_FR6c_seed = 6
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR6c = team2
            winner_FR6c_seed = 11

        # Game 7c
        random1 = random.randint(0, len(sevens) - 1)
        random2 = random.randint(0, len(tens) - 1)
        while sevens[random1] in tournament:
            random1 = random.randint(0, len(sevens) - 1)
        while tens[random2] in tournament:
            random2 = random.randint(0, len(tens) - 1)

        team1 = sevens[random1]
        team2 = tens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR7c = team1
            winner_FR7c_seed = 7
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR7c = team2
            winner_FR7c_seed = 10

        # Game 8c
        random1 = random.randint(0, len(eights) - 1)
        random2 = random.randint(0, len(nines) - 1)
        while eights[random1] in tournament:
            random1 = random.randint(0, len(eights) - 1)
        while nines[random2] in tournament:
            random2 = random.randint(0, len(nines) - 1)

        team1 = eights[random1]
        team2 = nines[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR8c = team1
            winner_FR8c_seed = 8
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR8c = team2
            winner_FR8c_seed = 9

        # Game 1d
        random1 = random.randint(0, len(ones) - 1)
        while ones[random1] in tournament:
            random1 = random.randint(0, len(ones) - 1)

        team1 = ones[random1]
        team2 = winner_PI4
        tournament.append(team1)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(1) " + team1 + " " + str(score1) + " - " + str(score2) + " (16) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR1d = team1
            winner_FR1d_seed = 1
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR1d = team2
            winner_FR1d_seed = 16

        # Game 2d
        random1 = random.randint(0, len(twos) - 1)
        random2 = random.randint(0, len(fifteens) - 1)
        while twos[random1] in tournament:
            random1 = random.randint(0, len(twos) - 1)
        while fifteens[random2] in tournament:
            random2 = random.randint(0, len(fifteens) - 1)

        team1 = twos[random1]
        team2 = fifteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(2) " + team1 + " " + str(score1) + " - " + str(score2) + " (15) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR2d = team1
            winner_FR2d_seed = 2
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR2d = team2
            winner_FR2d_seed = 15

        # Game 3d
        random1 = random.randint(0, len(threes) - 1)
        random2 = random.randint(0, len(fourteens) - 1)
        while threes[random1] in tournament:
            random1 = random.randint(0, len(threes) - 1)
        while fourteens[random2] in tournament:
            random2 = random.randint(0, len(fourteens) - 1)

        team1 = threes[random1]
        team2 = fourteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(3) " + team1 + " " + str(score1) + " - " + str(score2) + " (14) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR3d = team1
            winner_FR3d_seed = 3
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR3d = team2
            winner_FR3d_seed = 14

        # Game 4d
        random1 = random.randint(0, len(fours) - 1)
        random2 = random.randint(0, len(thirteens) - 1)
        while fours[random1] in tournament:
            random1 = random.randint(0, len(fours) - 1)
        while thirteens[random2] in tournament:
            random2 = random.randint(0, len(thirteens) - 1)

        team1 = fours[random1]
        team2 = thirteens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(4) " + team1 + " " + str(score1) + " - " + str(score2) + " (13) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR4d = team1
            winner_FR4d_seed = 4
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR4d = team2
            winner_FR4d_seed = 13

        # Game 5d
        random1 = random.randint(0, len(fives) - 1)
        random2 = random.randint(0, len(twelves) - 1)
        while fives[random1] in tournament:
            random1 = random.randint(0, len(fives) - 1)
        while twelves[random2] in tournament:
            random2 = random.randint(0, len(twelves) - 1)

        team1 = fives[random1]
        team2 = twelves[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(5) " + team1 + " " + str(score1) + " - " + str(score2) + " (12) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR5d = team1
            winner_FR5d_seed = 5
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR5d = team2
            winner_FR5d_seed = 12

        # Game 6d
        random1 = random.randint(0, len(sixes) - 1)
        random2 = random.randint(0, len(elevens) - 1)
        while sixes[random1] in tournament:
            random1 = random.randint(0, len(sixes) - 1)
        while elevens[random2] in tournament:
            random2 = random.randint(0, len(elevens) - 1)

        team1 = sixes[random1]
        team2 = elevens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(6) " + team1 + " " + str(score1) + " - " + str(score2) + " (11) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR6d = team1
            winner_FR6d_seed = 6
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR6d = team2
            winner_FR6d_seed = 11

        # Game 7d
        random1 = random.randint(0, len(sevens) - 1)
        random2 = random.randint(0, len(tens) - 1)
        while sevens[random1] in tournament:
            random1 = random.randint(0, len(sevens) - 1)
        while tens[random2] in tournament:
            random2 = random.randint(0, len(tens) - 1)

        team1 = sevens[random1]
        team2 = tens[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(7) " + team1 + " " + str(score1) + " - " + str(score2) + " (10) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR7d = team1
            winner_FR7d_seed = 7
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR7d = team2
            winner_FR7d_seed = 10

        # Game 8d
        random1 = random.randint(0, len(eights) - 1)
        random2 = random.randint(0, len(nines) - 1)
        while eights[random1] in tournament:
            random1 = random.randint(0, len(eights) - 1)
        while nines[random2] in tournament:
            random2 = random.randint(0, len(nines) - 1)

        team1 = eights[random1]
        team2 = nines[random2]
        tournament.append(team1)
        tournament.append(team2)
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(8) " + team1 + " " + str(score1) + " - " + str(score2) + " (9) " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FR8d = team1
            winner_FR8d_seed = 8
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FR8d = team2
            winner_FR8d_seed = 9

        # Second Round
        # Game 1a
        team1 = winner_FR1a
        team2 = winner_FR8a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR1a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR8a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1a = team1
            winner_SR1a_seed = winner_FR1a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1a = team2
            winner_SR1a_seed = winner_FR8a_seed

        # Game 2a
        team1 = winner_FR2a
        team2 = winner_FR7a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR2a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR7a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2a = team1
            winner_SR2a_seed = winner_FR2a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2a = team2
            winner_SR2a_seed = winner_FR7a_seed

        # Game 3a
        team1 = winner_FR3a
        team2 = winner_FR6a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR3a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR6a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3a = team1
            winner_SR3a_seed = winner_FR3a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3a = team2
            winner_SR3a_seed = winner_FR6a_seed

        # Game 4a
        team1 = winner_FR4a
        team2 = winner_FR5a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR4a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(winner_FR5a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4a = team1
            winner_SR4a_seed = winner_FR4a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4a = team2
            winner_SR4a_seed = winner_FR5a_seed

        # Game 1b
        team1 = winner_FR1b
        team2 = winner_FR8b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR1b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR8b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1b = team1
            winner_SR1b_seed = winner_FR1b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1b = team2
            winner_SR1b_seed = winner_FR8b_seed

        # Game 2b
        team1 = winner_FR2b
        team2 = winner_FR7b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR2b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR7b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2b = team1
            winner_SR2b_seed = winner_FR2b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2b = team2
            winner_SR2b_seed = winner_FR7b_seed

        # Game 3b
        team1 = winner_FR3b
        team2 = winner_FR6b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR3b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR6b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3b = team1
            winner_SR3b_seed = winner_FR3b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3b = team2
            winner_SR3b_seed = winner_FR6b_seed

        # Game 4b
        team1 = winner_FR4b
        team2 = winner_FR5b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR4b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR5b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4b = team1
            winner_SR4b_seed = winner_FR4b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4b = team2
            winner_SR4b_seed = winner_FR5b_seed

        # Game 1c
        team1 = winner_FR1c
        team2 = winner_FR8c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR1c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR8c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1c = team1
            winner_SR1c_seed = winner_FR1c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1c = team2
            winner_SR1c_seed = winner_FR8c_seed

        # Game 2c
        team1 = winner_FR2c
        team2 = winner_FR7c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR2c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR7c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2c = team1
            winner_SR2c_seed = winner_FR2c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2c = team2
            winner_SR2c_seed = winner_FR7c_seed

        # Game 3c
        team1 = winner_FR3c
        team2 = winner_FR6c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR3c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR6c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3c = team1
            winner_SR3c_seed = winner_FR3c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3c = team2
            winner_SR3c_seed = winner_FR6c_seed

        # Game 4c
        team1 = winner_FR4c
        team2 = winner_FR5c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR4c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR5c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4c = team1
            winner_SR4c_seed = winner_FR4c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4c = team2
            winner_SR4c_seed = winner_FR5c_seed

        # Game 1d
        team1 = winner_FR1d
        team2 = winner_FR8d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR1d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR8d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR1d = team1
            winner_SR1d_seed = winner_FR1d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR1d = team2
            winner_SR1d_seed = winner_FR8d_seed

        # Game 2a
        team1 = winner_FR2d
        team2 = winner_FR7d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR2d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR7d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR2d = team1
            winner_SR2d_seed = winner_FR2d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR2d = team2
            winner_SR2d_seed = winner_FR7d_seed

        # Game 3d
        team1 = winner_FR3d
        team2 = winner_FR6d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR3d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR6d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR3d = team1
            winner_SR3d_seed = winner_FR3d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR3d = team2
            winner_SR3d_seed = winner_FR6d_seed

        # Game 4d
        team1 = winner_FR4d
        team2 = winner_FR5d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FR4d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FR5d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SR4d = team1
            winner_SR4d_seed = winner_FR4d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SR4d = team2
            winner_SR4d_seed = winner_FR5d_seed

        # Sweet Sixteen
        # Game 1a
        team1 = winner_SR1a
        team2 = winner_SR4a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR1a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR4a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS1a = team1
            winner_SS1a_seed = winner_SR1a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS1a = team2
            winner_SS1a_seed = winner_SR4a_seed

        # Game 2a
        team1 = winner_SR2a
        team2 = winner_SR3a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR2a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR3a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS2a = team1
            winner_SS2a_seed = winner_SR2a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS2a = team2
            winner_SS2a_seed = winner_SR3a_seed

        # Game 1b
        team1 = winner_SR1b
        team2 = winner_SR4b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR1b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR4b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS1b = team1
            winner_SS1b_seed = winner_SR1b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS1b = team2
            winner_SS1b_seed = winner_SR4b_seed

        # Game 2b
        team1 = winner_SR2b
        team2 = winner_SR3b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR2b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR3b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS2b = team1
            winner_SS2b_seed = winner_SR2b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS2b = team2
            winner_SS2b_seed = winner_SR3b_seed

        # Game 1c
        team1 = winner_SR1c
        team2 = winner_SR4c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR1c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR4c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS1c = team1
            winner_SS1c_seed = winner_SR1c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS1c = team2
            winner_SS1c_seed = winner_SR4c_seed

        # Game 2c
        team1 = winner_SR2c
        team2 = winner_SR3c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR2c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR3c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS2c = team1
            winner_SS2c_seed = winner_SR2c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS2c = team2
            winner_SS2c_seed = winner_SR3c_seed

        # Game 1d
        team1 = winner_SR1d
        team2 = winner_SR4d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR1d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR4d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS1d = team1
            winner_SS1d_seed = winner_SR1d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS1d = team2
            winner_SS1d_seed = winner_SR4d_seed

        # Game 2a
        team1 = winner_SR2d
        team2 = winner_SR3d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SR2d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SR3d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_SS2d = team1
            winner_SS2d_seed = winner_SR2d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_SS2d = team2
            winner_SS2d_seed = winner_SR3d_seed

        # Elite Eight
        # Game 1a
        team1 = winner_SS1a
        team2 = winner_SS2a
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SS1a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SS2a_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_EE1a = team1
            winner_EE1a_seed = winner_SS1a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_EE1a = team2
            winner_EE1a_seed = winner_SS2a_seed

        # Game 1b
        team1 = winner_SS1b
        team2 = winner_SS2b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SS1b_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SS2b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_EE1b = team1
            winner_EE1b_seed = winner_SS1b_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_EE1b = team2
            winner_EE1b_seed = winner_SS2b_seed

        # Game 1c
        team1 = winner_SS1c
        team2 = winner_SS2c
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SS1c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SS2c_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_EE1c = team1
            winner_EE1c_seed = winner_SS1c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_EE1c = team2
            winner_EE1c_seed = winner_SS2c_seed

        # Game 1d
        team1 = winner_SS1d
        team2 = winner_SS2d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_SS1d_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_SS2d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_EE1d = team1
            winner_EE1d_seed = winner_SS1d_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_EE1d = team2
            winner_EE1d_seed = winner_SS2d_seed

        # Final Four
        # Game 1
        team1 = winner_EE1a
        team2 = winner_EE1b
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_EE1a_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_EE1b_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FF1 = team1
            winner_FF1_seed = winner_EE1a_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FF1 = team2
            winner_FF1_seed = winner_EE1b_seed

        # Game 2
        team1 = winner_EE1c
        team2 = winner_EE1d
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_EE1c_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_EE1d_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner_FF2 = team1
            winner_FF2_seed = winner_EE1c_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner_FF2 = team2
            winner_FF2_seed = winner_EE1d_seed

        # Final
        team1 = winner_FF1
        team2 = winner_FF2
        rating1 = team_ratings[team1]
        rating2 = team_ratings[team2]
        score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
        score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))
        while score1 == score2:
            score1 = int(random.uniform(ppg_by_ranking[rating1][0], ppg_by_ranking[rating1][1]))
            score2 = int(random.uniform(ppg_by_ranking[rating2][0], ppg_by_ranking[rating2][1]))

        print("(" + str(winner_FF1_seed) + ") " + team1 + " " + str(score1) + " - " + str(score2) + " (" + str(
            winner_FF2_seed) + ") " + team2)

        ratings_played[team1][1] += 1
        ratings_played[team2][1] += 1
        if score1 > score2:
            rankings[team1][0] = rankings[team1][0] + 1
            rankings[team2][1] = rankings[team2][1] + 1
            winner = team1
            winner_seed = winner_FF1_seed
        elif score2 > score1:
            rankings[team2][0] = rankings[team2][0] + 1
            rankings[team1][1] = rankings[team1][1] + 1
            winner = team2
            winner_seed = winner_FF2_seed

        print(winner)


    assign_rating_all()

    preseason()

    conference_tourneys()

    march_madness()


test()
